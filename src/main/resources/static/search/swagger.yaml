swagger: "2.0"
info:
  description: "Baton의 양도권 검색, 조회 및 등록 관련 API를 담고 있습니다."
  version: "0.0.1"
  title: "Baton Search API"
  contact:
    email: "sobu0715@gmail.com"
host: "baton.yonghochoi.com"
basePath: "/search"
tags:
  - name: "Ticket"
    description: "티켓 검색, 조회 및 등록 관련 API 입니다."
  - name: "Report"
    description: "신고 관련 API 입니다."
  - name: "FCM"
    description: "FCM 메시징 API 입니다."
schemes:
  - "https"
  - "http"
securityDefinitions:
  userId:
    type: apiKey
    name: REMOTE_USER
    in: header
paths:
  /fcm:
    post:
      tags:
        - "FCM"
      summary: "해당하는 TargetToken을 가진 기기에 메시지를 날립니다."
      description: "해당하는 TargetToken을 가진 기기에 메시지를 날립니다."
      operationId: "Token"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: body
          schema:
            type: object
            properties:
              targetToken:
                type: string
                description: "토큰"
              title:
                type: string
                description: "제목"
              body:
                type: string
                description: "내용"
      responses:
        200:
          description: "성공"
        401:
          description: "로그인 안되어 있음."
        500:
          description: "터짐."
  /report/ticket:
    post:
      tags:
        - "Report"
      summary: "양도권에 대한 신고를 수행 합니다."
      description: "양도권에 대한 신고를 수행 합니다."
      operationId: "reportTicket"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: body
          schema:
            type: object
            properties:
              ticketId:
                type: number
                description: "양도권 ID"
              content:
                type: string
                description: "신고 내용"
      responses:
        201:
          description: "성공"
        401:
          description: "로그인 안되어 있음."
        404:
          description: "티켓 찾을 수 없음."
  /report/user:
    post:
      tags:
        - "Report"
      summary: "유저에 대한 신고를 수행 합니다."
      description: "유저에 대한 신고를 수행 합니다."
      operationId: "reportUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: body
          schema:
            type: object
            properties:
              userId:
                type: number
                description: "유저 ID"
              content:
                type: string
                description: "신고 내용"
      responses:
        201:
          description: "성공"
        401:
          description: "로그인 안되어 있음."
        404:
          description: "티켓 찾을 수 없음."
  /ticket/info/{ID}:
    get:
      tags:
        - "Ticket"
      summary: "해당하는 ID를 가진 양도권을 반환 합니다."
      description: "해당하는 ID를 가진 양도권을 반환 합니다."
      operationId: "getTicket"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: longitude
          description: "경도"
          type: number
          format: float
          required: true
        - in: "query"
          name: latitude
          description: "위도"
          type: number
          format: float
          required: true
        - in: "path"
          name: "ID"
          description: "양도권 ID"
          type: number
          required: true
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/TicketInfo"
        "404":
          description: "양도권을 찾을 수 없습니다."
    post:
      tags:
        - "Ticket"
      summary: "해당하는 ID를 가진 양도권의 데이터에 이미지를 추가 합니다."
      description: "해당하는 ID를 가진 양도권의 데이터에 이미지를 추가 합니다."
      operationId: "postTicket"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: images
          type: file
          description: "이미지 파일, 여러 개 업로드 가능하지만 Swagger 2.0 에서는 제공하지 않습니다."
        - in: "path"
          name: "ID"
          description: "양도권 ID"
          type: number
          required: true
      responses:
        "201":
          description: "수정 성공"
          schema:
            $ref: "#/definitions/TicketInfo"
        "401":
          description: "로그인이 되어 있지 않습니다."
        "403":
          description: "권한이 없습니다."
        "404":
          description: "양도권을 찾을 수 없습니다."
    put:
      tags:
        - "Ticket"
      summary: "해당하는 ID를 가진 양도권의 데이터를 수정 합니다."
      description: "해당하는 ID를 가진 양도권의 데이터를 수정 합니다."
      operationId: "putTicket"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: data
          description: "수정할 데이터"
          schema:
            $ref: "#/definitions/TicketPut"
        - in: "path"
          name: "ID"
          description: "양도권 ID"
          type: number
          required: true
      responses:
        "202":
          description: "수정 성공"
          schema:
            $ref: "#/definitions/TicketInfo"
        "401":
          description: "로그인이 되어 있지 않습니다."
        "403":
          description: "권한이 없습니다."
        "404":
          description: "양도권을 찾을 수 없습니다."
    delete:
      tags:
        - "Ticket"
      summary: "해당하는 ID를 가진 양도권을 삭제 합니다."
      description: "해당하는 ID를 가진 양도권을 삭제 합니다."
      operationId: "deleteTicket"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "ID"
          description: "양도권 ID"
          type: number
          required: true
      responses:
        "202":
          description: "ACCEPTED"
        "401":
          description: "로그인이 되어 있지 않습니다."
        "403":
          description: "권한이 없습니다."
        "404":
          description: "양도권을 찾을 수 없습니다."
  /ticket/image/{ID}:
    delete:
      tags:
        - "Ticket"
      summary: "해당하는 ID를 가진 양도권을 삭제 합니다."
      description: "해당하는 ID를 가진 양도권을 삭제 합니다."
      operationId: "deleteTicketImage"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "ID"
          description: "양도권 이미지 ID"
          type: number
          required: true
      responses:
        "202":
          description: "ACCEPTED"
        "401":
          description: "로그인이 되어 있지 않습니다."
        "403":
          description: "권한이 없습니다."
        "404":
          description: "양도권 이미지를 찾을 수 없습니다."
  /ticket/string_query:
    get:
      tags:
        - "Ticket"
      summary: "메인 화면 검색 API 입니다."
      description: "메인 화면 검색 API 입니다."
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: page
          description: "페이지 수"
          type: number
          format: integer
          required: true
        - in: "query"
          name: size
          description: "페이지 당 아이템 갯수"
          type: number
          format: integer
          required: true
        - in: "query"
          name: latitude
          description: "위도"
          type: number
          format: float
          required: true
        - in: "query"
          name: longitude
          description: "경도"
          type: number
          format: float
          required: true
        - in: "query"
          name: query
          description: "검색어"
          type: string
          required: true
        - in: "query"
          name: maxDistance
          description: "최대 거리"
          type: number
          format: integer
          required: true
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              $ref: "#/definitions/TicketSimpleInfo"
  /ticket/query:
    get:
      tags:
        - "Ticket"
      summary: "티켓 필터 검색 API 입니다."
      description: "티켓 필터 검색 API 입니다."
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: page
          description: "페이지 수"
          type: number
          format: integer
          required: true
        - in: "query"
          name: size
          description: "페이지 당 아이템 갯수"
          type: number
          format: integer
          required: true
        - in: "query"
          name: place
          description: "위치"
          type: string
        - in: "query"
          name: hashtag
          type: array
          description: "해시 태그 목록, TagEnum을 따름"
          items:
            type: string
            enum:
              - KIND_TEACHER
              - SYSTEMATIC_CLASS
              - CUSTOMIZED_CARE
              - SPACIOUS_FACILITIES
              - VARIOUS_EQUIPMENT
              - NEW_EQUIPMENT
              - MANY_PEOPLE
              - LESS_PEOPLE
              - AGREEMENT
              - QUIET_AMBIENCE
              - STATION_AREA
        - in: "query"
          name: latitude
          description: "위도"
          type: number
          format: float
          required: true
        - in: "query"
          name: longitude
          description: "경도"
          type: number
          format: float
          required: true
        - in: "query"
          name: town
          description: "동 이름"
          type: string
        - in: "query"
          name: minPrice
          description: "최소 금액"
          type: number
          format: integer
        - in: "query"
          name: maxPrice
          description: "최대 금액"
          type: number
          format: integer
        - in: "query"
          name: minRemainNumber
          description: "최소 남은 횟수"
          type: number
          format: integer
        - in: "query"
          name: maxRemainNumber
          description: "최대 남은 횟수"
          type: number
          format: integer
        - in: "query"
          name: minRemainMonth
          description: "최소 남은 개월 수"
          type: number
          format: integer
        - in: "query"
          name: maxRemainMonth
          description: "최대 남은 개월 수"
          type: number
          format: integer
        - in: "query"
          name: maxDistance
          description: "최대 거리"
          type: number
          format: integer
          required: true
        - in: "query"
          name: ticketTypes
          description: "거래 타입, TicketType의 Enum을 따름"
          type: array
          items:
            type: string
            enum:
              - HEALTH
              - PT
              - PILATES_YOGA
              - ETC
        - in: "query"
          name: ticketTradeType
          description: "거래 방식. TicketTradeType의 Enum을 따름"
          type: string
          enum:
            - CONTECT
            - UNTECT
            - BOTH
        - in: "query"
          name: ticketTransferFee
          description: "양도비 납부를 누가 할 지 나타냄. TicketTransferFee의 Enum을 따름"
          type: string
          enum:
            - SELLER
            - CONSUMER
            - NONE
        - in: "query"
          name: ticketState
          description: "거래 상태. TicketState의 Enum을 따름"
          type: string
          enum:
            - SALE
            - RESERVED
            - DONE
        - in: "query"
          name: sortType
          description: "양도권 정렬 방식. TicketSortType의 Enum을 따름"
          type: string
          enum:
            - RECENT
            - LOWER_PRICE
            - HIGHER_PRICE
            - VIEWS
            - BOOKMARKED
            - REMAIN_DAY
            - REMAIN_NUMBER
            - DISTANCE
        - in: "query"
          name: hasClothes
          description: "운동복 대여 여부"
          type: boolean
        - in: "query"
          name: hasLocker
          description: "락커 여부"
          type: boolean
        - in: "query"
          name: hasShower
          description: "샤워장 여부"
          type: boolean
        - in: "query"
          name: hasGx
          description: "GX 여부"
          type: boolean
        - in: "query"
          name: canResell
          description: "재판매 가능 여부"
          type: boolean
        - in: "query"
          name: canRefund
          description: "환불 가능 여부"
          type: boolean
        - in: "query"
          name: isHold
          description: "홀딩 가능 여부"
          type: boolean
        - in: "query"
          name: canNego
          description: "네고 가능 여부"
          type: boolean
        - in: "query"
          name: isMembership
          description: "멤버쉽 여부"
          type: boolean
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              $ref: "#/definitions/TicketSimpleInfo"
  /ticket/count_query:
    get:
      tags:
        - "Ticket"
      summary: "티켓 필터 카운트 쿼리 API 입니다."
      description: "티켓 필터 카운트 쿼리 API 입니다."
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: page
          description: "페이지 수"
          type: number
          format: integer
          required: true
        - in: "query"
          name: size
          description: "페이지 당 아이템 갯수"
          type: number
          format: integer
          required: true
        - in: "query"
          name: place
          description: "위치"
          type: string
        - in: "query"
          name: hashtag
          type: array
          description: "해시 태그 목록, TagEnum을 따름"
          items:
            type: string
            enum:
              - KIND_TEACHER
              - SYSTEMATIC_CLASS
              - CUSTOMIZED_CARE
              - SPACIOUS_FACILITIES
              - VARIOUS_EQUIPMENT
              - NEW_EQUIPMENT
              - MANY_PEOPLE
              - LESS_PEOPLE
              - AGREEMENT
              - QUIET_AMBIENCE
              - STATION_AREA
        - in: "query"
          name: latitude
          description: "위도"
          type: number
          format: float
          required: true
        - in: "query"
          name: longitude
          description: "경도"
          type: number
          format: float
          required: true
        - in: "query"
          name: town
          description: "동 이름"
          type: string
        - in: "query"
          name: minPrice
          description: "최소 금액"
          type: number
          format: integer
        - in: "query"
          name: maxPrice
          description: "최대 금액"
          type: number
          format: integer
        - in: "query"
          name: minRemainNumber
          description: "최소 남은 횟수"
          type: number
          format: integer
        - in: "query"
          name: maxRemainNumber
          description: "최대 남은 횟수"
          type: number
          format: integer
        - in: "query"
          name: minRemainMonth
          description: "최소 남은 개월 수"
          type: number
          format: integer
        - in: "query"
          name: maxRemainMonth
          description: "최대 남은 개월 수"
          type: number
          format: integer
        - in: "query"
          name: maxDistance
          description: "최대 거리"
          type: number
          format: integer
          required: true
        - in: "query"
          name: ticketTypes
          description: "거래 타입, TicketType의 Enum을 따름"
          type: array
          items:
            type: string
            enum:
              - HEALTH
              - PT
              - PILATES_YOGA
              - ETC
        - in: "query"
          name: ticketTradeType
          description: "거래 방식. TicketTradeType의 Enum을 따름"
          type: string
          enum:
            - CONTECT
            - UNTECT
            - BOTH
        - in: "query"
          name: ticketTransferFee
          description: "양도비 납부를 누가 할 지 나타냄. TicketTransferFee의 Enum을 따름"
          type: string
          enum:
            - SELLER
            - CONSUMER
            - NONE
        - in: "query"
          name: ticketState
          description: "거래 상태. TicketState의 Enum을 따름"
          type: string
          enum:
            - SALE
            - RESERVED
            - DONE
        - in: "query"
          name: sortType
          description: "양도권 정렬 방식. TicketSortType의 Enum을 따름"
          type: string
          enum:
            - RECENT
            - LOWER_PRICE
            - HIGHER_PRICE
            - VIEWS
            - REMAIN_DAY
            - DISTANCE
        - in: "query"
          name: hasClothes
          description: "운동복 대여 여부"
          type: boolean
        - in: "query"
          name: hasLocker
          description: "락커 여부"
          type: boolean
        - in: "query"
          name: hasShower
          description: "샤워장 여부"
          type: boolean
        - in: "query"
          name: hasGx
          description: "GX 여부"
          type: boolean
        - in: "query"
          name: canResell
          description: "재판매 가능 여부"
          type: boolean
        - in: "query"
          name: canRefund
          description: "환불 가능 여부"
          type: boolean
        - in: "query"
          name: isHold
          description: "홀딩 가능 여부"
          type: boolean
        - in: "query"
          name: canNego
          description: "네고 가능 여부"
          type: boolean
        - in: "query"
          name: isMembership
          description: "멤버쉽 여부"
          type: boolean
      responses:
        "200":
          description: "OK"
          schema:
            type: number
            format: integer
            example: 5
  /ticket/post:
    post:
      tags:
        - "Ticket"
      summary: "양도권을 등록 합니다."
      description: "양도권을 등록 합니다."
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: location
          type: string
          description: "헬스장 이름"
          required: true
        - in: "formData"
          name: address
          type: string
          description: "주소"
          required: true
        - in: "formData"
          name: price
          type: number
          description: "가격 정보"
          required: true
        - in: "formData"
          name: expiryDate
          type: string
          format: date
          description: "만료 일자. isMembership이 True면 필수 (yyyy-MM-dd)"
        - in: "formData"
          name: type
          description: "거래 타입, TicketType의 Enum을 따름"
          type: string
          required: true
          enum:
            - HEALTH
            - PT
            - PILATES_YOGA
            - ETC
        - in: "formData"
          name: tradeType
          description: "거래 방식. TicketTradeType의 Enum을 따름"
          type: string
          required: true
          enum:
            - CONTECT
            - UNTECT
            - BOTH
        - in: "formData"
          name: transferFee
          description: "양도비 납부를 누가 할 지 나타냄. TicketTransferFee의 Enum을 따름"
          type: string
          required: true
          enum:
            - SELLER
            - CONSUMER
            - NONE
        - in: "formData"
          name: canNego
          type: boolean
          description: "네고 가능 여부"
          required: true
        - in: "formData"
          name: hasShower
          type: boolean
          description: "샤워장 여부"
          required: true
        - in: "formData"
          name: hasLocker
          type: boolean
          description: "라커 여부"
          required: true
        - in: "formData"
          name: hasClothes
          type: boolean
          description: "운동복 제공 여부"
          required: true
        - in: "formData"
          name: hasGx
          type: boolean
          description: "GX 여부"
          required: true
        - in: "formData"
          name: canResell
          type: boolean
          description: "재판매 가능 여부"
          required: true
        - in: "formData"
          name: canRefund
          type: boolean
          description: "환불 가능 여부"
          required: true
        - in: "formData"
          name: description
          type: string
          description: "양도권 설명"
          required: true
        - in: "formData"
          name: isMembership
          type: boolean
          required: true
        - in: "formData"
          name: isHolding
          type: boolean
          description: "기간 홀딩 가능 여부"
          required: true
        - in: "formData"
          name: remainingNumber
          type: number
          description: "남은 횟수. isMembership이 False면 필수"
        - in: "formData"
          name: latitude
          type: number
          description: "위도 정보"
          format: float
          required: true
        - in: "formData"
          name: longitude
          type: number
          description: "경도 정보"
          format: float
          required: true
        - in: "formData"
          name: tags
          type: array
          description: "해시 태그 목록, TagEnum을 따름"
          items:
            type: string
            enum:
              - KIND_TEACHER
              - SYSTEMATIC_CLASS
              - CUSTOMIZED_CARE
              - SPACIOUS_FACILITIES
              - VARIOUS_EQUIPMENT
              - NEW_EQUIPMENT
              - MANY_PEOPLE
              - LESS_PEOPLE
              - AGREEMENT
              - QUIET_AMBIENCE
              - STATION_AREA
        - in: "formData"
          name: images
          type: file
          description: "이미지 파일, 여러 개 업로드 가능하지만 Swagger 2.0 에서는 제공하지 않습니다."
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/TicketSimpleInfo"

definitions:
  User:
    type: object
    description: "유저 정보"
    properties:
      id:
        type: number
        example: 1
        description: "유저 ID"
      nickname:
        type: string
        example: "nickname"
        description: "유저 닉네임"
      gender:
        type: boolean
        example: true
        description: "남성인지 아닌지 여부"
  TicketImage:
    type: object
    description: "양도권 관련 이미지"
    properties:
      id:
        type: number
        example: 1
        description: "양도권 ID"
      url:
        type: string
        format: url
        example: "https://depromeet11th.s3.ap-northeast-2.amazonaws.com/6team/18ee9e14-ceec-41a3-a458-97ec0d1099b1.jpeg"
        description: "원본 이미지"
      thumbnailUrl:
        type: string
        format: url
        example: "https://depromeet11th.s3.ap-northeast-2.amazonaws.com/6team/18ee9e14-ceec-41a3-a458-97ec0d1099b1.jpeg"
        description: "썸네일 용 이미지"
      isMain:
        type: boolean
        example: false
        description: "메인 이미지 여부, 현재 사용 하지 않음."
  TicketState:
    type: string
    description: "양도권 상태를 나타냄. 각각 판매중, 예약중, 거래 완료"
    enum:
      - SALE
      - RESERVED
      - DONE
    example: SALE
  TicketType:
    type: string
    description: "양도권 종류를 나타냄. 각각 헬스, PT, 필라테스 & 요가, 기타"
    enum:
      - HEALTH
      - PT
      - PILATES_YOGA
      - ETC
    example: HEALTH
  TicketTradeType:
    type: string
    description: "거래 타입을 나타냄. 각각 대면, 비대면, 둘 다 가능"
    enum:
      - CONTECT
      - UNTECT
      - BOTH
    example: "CONTECT"
  TicketTransferFee:
    type: string
    description: "양도권 거래 수수료 부담을 누가 할 지 나타냄. 각각 판매자, 구매자, 없음"
    enum:
      - SELLER
      - CONSUMER
      - NONE
    example: "SELLER"
  TicketSortType:
    type: string
    description: "정렬 방식을 나타냄. 각각 최신, 가격 낮은 순, 가격 높은 순, 조회수, 북마크 횟수, 남은 일자 순, 남은 횟수 순, 거리순"
    enum:
      - RECENT
      - LOWER_PRICE
      - HIGHER_PRICE
      - VIEWS
      - BOOKMARKED
      - REMAIN_DAY
      - REMAIN_NUMBER
      - DISTANCE
    example: "RECENT"
  TicketInfo:
    type: object
    description: "양도권 정보"
    properties:
      id:
        type: number
        example: 1
        description: "양도권 ID"
      seller:
        $ref: "#/definitions/User"
      location:
        type: string
        example: "휴메이크 휘트니스 석촌점"
        description: "헬스장 이름"
      address:
        type: string
        example: "광진구 중곡동 텍스트 1234번지"
        description: "주소"
      price:
        type: number
        example: 200000
        description: "가격 정보"
      createAt:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"
        description: "생성 일자"
      expiryDate:
        type: string
        format: date
        description: "만료 일자. isMembership이 true일 때 사용."
        example: "2023-04-05"
      state:
        $ref: "#/definitions/TicketState"
      type:
        $ref: "#/definitions/TicketType"
      tradeType:
        $ref: "#/definitions/TicketTradeType"
      transferFee:
        $ref: "#/definitions/TicketTransferFee"
      canNego:
        type: boolean
        description: "네고 가능 여부"
      hasShower:
        type: boolean
        description: "샤워장 여부"
      hasLocker:
        type: boolean
        description: "라커 여부"
      hasClothes:
        type: boolean
        description: "운동복 제공 여부"
      hasGx:
        type: boolean
        description: "GX 여부"
      canResell:
        type: boolean
        description: "재판매 가능 여부"
      canRefund:
        type: boolean
        description: "환불 가능 여부"
      description:
        type: string
        description: "양도권 설명"
      tags:
        type: array
        description: "해시 태그 리스트"
        items:
          type: string
      images:
        type: array
        description: "이미지 리스트"
        items:
          $ref: "#/definitions/TicketImage"
      isMembership:
        type: boolean
        description: "기간제 여부."
        example: true
      isHolding:
        type: boolean
        description: "기간 홀딩 가능 여부"
        example: true
      bookmarkId:
        type: number
        description: "해당 티켓에 대한 북마크 ID. 없으면 null 반환"
        example: null
      remainingNumber:
        type: number
        description: "남은 횟수, isMembership이 false면 사용"
        example: null
      remainingDay:
        type: number
        description: "남은 일자, isMembership이 true면 사용"
        example: 180
      latitude:
        type: number
        description: "위도 정보"
        format: float
        example: 36.1234
      longitude:
        type: number
        description: "경도 정보"
        format: float
        example: 127.1234
      distance:
        type: number
        description: "현재 위치에서 부터 거리 정보 (m 단위)"
        format: float
        example: 2432.1
      bookmarkCount:
        type: number
        description: "북마크 횟수."
        example: 3
      viewCount:
        type: number
        description: "조회수."
        example: 5
  TicketSimpleInfo:
    type: object
    description: "양도권 정보"
    properties:
      id:
        type: number
        example: 1
        description: "양도권 ID"
      location:
        type: string
        example: "휴메이크 휘트니스 석촌점"
        description: "헬스장 이름"
      address:
        type: string
        example: "광진구 중곡동 텍스트 1234번지"
        description: "주소"
      price:
        type: number
        example: 200000
        description: "가격 정보"
      mainImage:
        type: string
        example: "https://depromeet11th.s3.ap-northeast-2.amazonaws.com/6team/18ee9e14-ceec-41a3-a458-97ec0d1099b1.jpeg"
        description: "메인 이미지 썸네일"
      createAt:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"
        description: "생성 일자"
      state:
        $ref: "#/definitions/TicketState"
      tags:
        type: array
        description: "해시 태그 리스트"
        items:
          type: string
      isMembership:
        type: boolean
        description: "기간제 여부, true일 시 expiryDate를 사용하고 false일 시 remainingNumber를 사용 한다."
        example: true
      remainingNumber:
        type: number
        description: "남은 이용 횟수, isMembership이 true면 null"
        example: 180
      expiryDate:
        type: string
        format: date
        description: "만료 일자"
        example: "2023-04-05"
      latitude:
        type: number
        description: "위도 정보"
        format: float
        example: 36.1234
      longitude:
        type: number
        description: "경도 정보"
        format: float
        example: 127.1234
      distance:
        type: number
        description: "현재 위치에서 부터 거리 정보 (m 단위)"
        format: float
        example: 2432.1
      bookmarkCount:
        type: number
        description: "북마크 횟수"
        example: 3
      viewCount:
        type: number
        description: "조회수"
        example: 36.1234
      type:
        type: string
        description: "양도권 타입"
        example: "HEALTH"
  TagEnum:
    type: string
    description: "Tag 관련 Enum 입니다. 순서대로 친절한 선생님, 체계적인 수업, 맞춤케어, 넓은 시설, 다양한 기구, 최신 기구, 사람이 많은, 사람이 적은, 쾌적한 환경, 조용한 분위기, 역세권"
    enum:
      - KIND_TEACHER
      - SYSTEMATIC_CLASS
      - CUSTOMIZED_CARE
      - SPACIOUS_FACILITIES
      - VARIOUS_EQUIPMENT
      - NEW_EQUIPMENT
      - MANY_PEOPLE
      - LESS_PEOPLE
      - AGREEMENT
      - QUIET_AMBIENCE
      - STATION_AREA
  TicketPostInfo:
    type: object
    description: "양도권 정보"
    required:
      - location
      - address
      - price
      - type
      - canNego
      - tradeType
      - hasLocker
      - hasShower
      - hasClothes
      - hasGx
      - canResell
      - canRefund
      - description
      - transferFee
      - latitude
      - longitude
      - isMembership
      - isHolding
    properties:
      location:
        type: string
        example: "휴메이크 휘트니스 석촌점"
        description: "헬스장 이름"
      address:
        type: string
        example: "광진구 중곡동 텍스트 1234번지"
        description: "주소"
      price:
        type: number
        example: 200000
        description: "가격 정보"
      expiryDate:
        type: string
        format: date
        description: "만료 일자. isMembership이 True면 필수"
        example: "2023-04-05"
      type:
        $ref: "#/definitions/TicketType"
      tradeType:
        $ref: "#/definitions/TicketTradeType"
      transferFee:
        $ref: "#/definitions/TicketTransferFee"
      canNego:
        type: boolean
        description: "네고 가능 여부"
      hasShower:
        type: boolean
        description: "샤워장 여부"
      hasLocker:
        type: boolean
        description: "라커 여부"
      hasClothes:
        type: boolean
        description: "운동복 제공 여부"
      hasGx:
        type: boolean
        description: "GX 여부"
      canResell:
        type: boolean
        description: "재판매 가능 여부"
      canRefund:
        type: boolean
        description: "환불 가능 여부"
      description:
        type: string
        description: "양도권 설명"
      isMembership:
        type: boolean
        description: "기간제 여부."
        example: true
      isHolding:
        type: boolean
        description: "기간 홀딩 가능 여부"
        example: true
      remainingNumber:
        type: number
        description: "남은 횟수, isMembership이 False면 필수"
        example: 180
      latitude:
        type: number
        description: "위도 정보"
        format: float
        example: 36.1234
      longitude:
        type: number
        description: "경도 정보"
        format: float
        example: 127.1234
  TicketPut:
    type: object
    description: "양도권 수정 정보"
    properties:
      ticketState:
        $ref: "#/definitions/TicketState"